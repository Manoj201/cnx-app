{"version":3,"sources":["images/logo.png","app/shared/components/typography/Typography.js","app/shared/components/actionButton/ActionButton.component.js","app/shared/components/formTextField/FormTextField.component.js","app/shared/components/formSelectField/FormSelectField.component.js","app/layout/header/Header.component.js","app/modules/part/components/PartItem/PartItem.component.js","app/modules/part/actions/Part.actions.js","app/modules/part/actions/Types.js","app/modules/part/containers/PartList.container.js","app/modules/part/pages/PartList.page.js","app/modules/part/forms/AddEditPart.form.js","app/modules/part/containers/AddEditpart.container.js","app/modules/part/pages/NewPart.page.js","app/layout/Layout.container.js","app/App.js","themes/default.js","themes/index.js","app/modules/part/reducers/Part.reducer.js","app/store/Reducers.js","app/api/stub/PartList.data.js","app/api/Part.service.js","app/modules/part/sagas/Part.saga.js","app/store/Sagas.js","serviceWorker.js","index.js","app/store/ConfigureStore.js"],"names":["module","exports","getColor","color","theme","brigtness","palette","getFontWeight","style","getFontSize","size","multiplier","variant","defaultSize","typography","fontSize","React","memo","children","weight","colorBrightness","props","useTheme","fontWeight","useStyles","makeStyles","root","alignItems","wrapper","position","loader","top","left","marginTop","marginLeft","ActionButton","classes","className","Button","type","onClick","disabled","loading","startIcon","width","label","CircularProgress","defaultProps","FormTextField","field","TextField","value","fullWidth","helperText","error","errorMessage","formControl","FormSelectField","required","data","customOnChange","sertFieldValue","placeholder","inputLabel","useRef","useState","labelWidth","setLabelWidth","useEffect","current","offsetWidth","FormControl","InputLabel","ref","id","Select","labelId","onChange","e","map","item","MenuItem","FormHelperText","appBar","backgroundImage","padding","appTitle","paddingLeft","paddingTop","AppBar","Toolbar","Grid","container","justify","direction","src","logo","alt","height","paper","backgroundColor","Paper","elevation","name","code","status","payload","display","flex","justifyContent","dispatch","useDispatch","history","useHistory","Actions","partList","useSelector","state","partState","partListLoading","handleClickAddPart","useCallback","push","Fragment","spacing","part","xs","sm","md","lg","initialValues","onSubmit","aa","alert","enableReinitialize","formikProps","values","component","maxWidth","overFlowX","content","flexGrow","minHeight","fakeToolbar","withRouter","path","PartListPage","NewPartPage","App","exact","render","to","AppLayout","primary","main","light","tinycolor","lighten","toHexString","dark","darken","secondary","contrastText","warning","success","info","text","hint","background","default","customShadows","widget","widgetDark","widgetWide","overrides","MuiBackdrop","MuiMenu","boxShadow","MuiSelect","icon","MuiListItem","button","MuiTouchRipple","child","MuiTableRow","MuiTableCell","borderBottom","head","body","createMuiTheme","defaultTheme","h1","h2","h3","h4","h5","h6","INITIAL_STATE","partListError","ACTION_HANDLERS","createReducer","combineReducers","PartReducer","PartList","partApiService","getPartList","a","Promise","resolve","reject","setTimeout","watchGetPartList","call","PartApiService","response","put","takeLatest","createdPartSaga","PartSaga","all","fork","Boolean","window","location","hostname","match","store","reactotroneStoreActions","middleware","sagaMiddleware","createSagaMiddleware","createStore","reducers","applyMiddleware","run","sagas","configureStore","ReactDOM","ThemeProvider","Themes","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.c89ccb71.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.99e0859d.png\";","import React from \"react\";\nimport { withStyles, Typography as TypographyBase } from \"@material-ui/core\";\nimport { useTheme, makeStyles } from \"@material-ui/styles\";\n\nconst Typography = ({\n  children,\n  weight,\n  size,\n  colorBrightness,\n  color,\n  ...props\n}) => {\n  var theme = useTheme();\n\n  return (\n    <TypographyBase\n      style={{\n        color: getColor(color, theme, colorBrightness),\n        fontWeight: getFontWeight(weight),\n        fontSize: getFontSize(size, props.variant, theme),\n      }}\n      {...props}\n    >\n      {children}\n    </TypographyBase>\n  );\n};\n\nfunction getColor(color, theme, brigtness = \"main\") {\n  if (color && theme.palette[color] && theme.palette[color][brigtness]) {\n    return theme.palette[color][brigtness];\n  }\n}\n\nfunction getFontWeight(style) {\n  switch (style) {\n    case \"light\":\n      return 300;\n    case \"medium\":\n      return 500;\n    case \"bold\":\n      return 600;\n    default:\n      return 400;\n  }\n}\n\nfunction getFontSize(size, variant = \"\", theme) {\n  var multiplier;\n\n  switch (size) {\n    case \"sm\":\n      multiplier = 0.8;\n      break;\n    case \"md\":\n      multiplier = 1.5;\n      break;\n    case \"xl\":\n      multiplier = 2;\n      break;\n    case \"xxl\":\n      multiplier = 3;\n      break;\n    default:\n      multiplier = 1;\n      break;\n  }\n\n  var defaultSize =\n    variant && theme.typography[variant]\n      ? theme.typography[variant].fontSize\n      : theme.typography.fontSize + \"px\";\n\n  return `calc(${defaultSize} * ${multiplier})`;\n}\n\nexport default React.memo(Typography);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    alignItems: \"center\",\n  },\n  wrapper: {\n    position: \"relative\",\n  },\n  loader: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n\nconst ActionButton = (props) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>\n        <Button\n          type={props.type}\n          onClick={props.onClick}\n          disabled={props.loading || props.disabled}\n          variant={props.variant}\n          color={props.color}\n          size={props.size}\n          startIcon={props.startIcon}\n          style={{\n            width: \"100%\",\n          }}\n        >\n          {props.label}\n        </Button>\n        {props.loading && (\n          <CircularProgress size={24} className={classes.loader} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nActionButton.defaultProps = {\n  label: \"Button\",\n  loading: false,\n  variant: \"contained\",\n  color: \"primary\",\n  size: \"small\",\n  disabled: false,\n  startIcon: null,\n  type: null,\n  onClick: () => {},\n};\n\nActionButton.propTypes = {\n  label: PropTypes.string,\n  loading: PropTypes.bool,\n  disabled: PropTypes.bool,\n  variant: PropTypes.string,\n  color: PropTypes.string,\n  size: PropTypes.string,\n  startIcon: PropTypes.element,\n  type: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nexport default React.memo(ActionButton);\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst FormTextField = ({ field, ...props }) => {\n  return (\n    <TextField\n      {...field}\n      {...props}\n      value={field.value ? field.value : \"\"}\n      fullWidth\n      size=\"small\"\n      helperText={props.error && props.errorMessage}\n      variant=\"outlined\"\n    />\n  );\n};\n\nexport default FormTextField;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    width: \"100%\",\n    marginTop: 0,\n  },\n}));\n\nconst FormSelectField = ({\n  field,\n  label,\n  required,\n  data,\n  customOnChange,\n  sertFieldValue,\n  error,\n  errorMessage,\n  placeholder,\n}) => {\n  const classes = useStyles();\n  const inputLabel = React.useRef(null);\n  const [labelWidth, setLabelWidth] = React.useState(0);\n\n  React.useEffect(() => {\n    setLabelWidth(inputLabel.current.offsetWidth);\n  }, []);\n  return (\n    <FormControl\n      variant=\"outlined\"\n      className={classes.formControl}\n      size={\"small\"}\n    >\n      <InputLabel ref={inputLabel} id=\"demo-simple-select-filled-label\">\n        {label}\n      </InputLabel>\n      <Select\n        labelId=\"demo-simple-select-filled-label\"\n        id=\"demo-simple-select-filled\"\n        {...field}\n        onChange={(e) => field.onChange(e)}\n        labelWidth={labelWidth}\n        required={required}\n      >\n        {data &&\n          data.map((item) => {\n            return <MenuItem value={item.value}>{item.label}</MenuItem>;\n          })}\n      </Select>\n      {error && errorMessage ? (\n        <FormHelperText>{errorMessage}</FormHelperText>\n      ) : null}\n    </FormControl>\n  );\n};\n\nexport default FormSelectField;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport { Typography } from \"../../shared/components\";\n\nimport logo from \"../../../images/logo.png\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    width: \"100%\",\n    backgroundImage:\n      \"linear-gradient(0deg, rgba(46,51,83,1) 24%, rgba(0,0,0,1) 86%)\",\n    padding: 20,\n  },\n  appTitle: {\n    paddingLeft: 20,\n    paddingTop: 5,\n  },\n}));\n\nconst AppHeader = (props) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <Grid\n            container\n            justify=\"flex-start\"\n            alignItems=\"center\"\n            direction=\"row\"\n          >\n            <Grid item>\n              <img src={logo} alt=\"logo\" height=\"75\" weight=\"150\" />\n            </Grid>\n            <Grid item className={classes.appTitle}>\n              <Typography variant=\"h4\" color=\"secondary\" weight=\"bold\">\n                CNX APP\n              </Typography>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default React.memo(AppHeader);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport { Typography } from \"../../../../shared/components\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    backgroundColor: \"#b4b6e0\",\n    padding: 20,\n  },\n}));\n\nconst PartItem = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Paper elevation={0} className={classes.paper}>\n      <Grid container justify=\"space-between\" alignItems=\"center\">\n        <Grid item>\n          <Typography variant=\"h6\" color=\"primary\" weight=\"medium\">\n            {props.name}\n          </Typography>\n          <Typography variant=\"body2\" color=\"primary\" weight=\"medium\">\n            {props.code}\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"body1\" color=\"primary\" weight=\"medium\">\n            {props.status}\n          </Typography>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default React.memo(PartItem);\n","// @flow\n\nimport {\n  GET_PART_LIST,\n  GET_PART_LIST_SUCCESS,\n  GET_PART_LIST_FAILURE,\n} from \"./Types\";\n\nconst getPartList = (): Object => ({\n  type: GET_PART_LIST,\n  payload: {},\n});\n\nconst getPartListSuccess = (data: Object): Object => ({\n  type: GET_PART_LIST_SUCCESS,\n  payload: { data },\n});\n\nconst getPartListFailure = (error: Object): Object => ({\n  type: GET_PART_LIST_FAILURE,\n  payload: { error },\n});\n\nexport default {\n  getPartList,\n  getPartListSuccess,\n  getPartListFailure,\n};\n","// @flow\nexport const GET_PART_LIST = \"GET_PART_LIST\";\nexport const GET_PART_LIST_SUCCESS = \"GET_PART_LIST_SUCCESS\";\nexport const GET_PART_LIST_FAILURE = \"GET_PART_LIST_FAILURE\";\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { useHistory } from \"react-router-dom\";\n\nimport PartItem from \"app/modules/part/components/PartItem/PartItem.component\";\nimport { ActionButton } from \"app/shared/components\";\n\nimport Actions from \"app/modules/part/actions/Part.actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  loader: {\n    display: \"flex\",\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"20vh\",\n  },\n}));\n\nconst PartListContainer = (props) => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  let history = useHistory();\n\n  React.useEffect(() => {\n    dispatch(Actions.getPartList());\n  }, [dispatch]);\n\n  const partList = useSelector((state) => state.partState.partList);\n  const loading = useSelector((state) => state.partState.partListLoading);\n  // const partListError = useSelector((state) => state.partState.partListError);\n\n  const handleClickAddPart = React.useCallback(() => {\n    history.push(\"/app/new-part\");\n  }, [history]);\n\n  return (\n    <React.Fragment>\n      <Grid container spacing={2} direction=\"column\">\n        <Grid item container justify=\"flex-end\">\n          <ActionButton\n            label=\"Add Part\"\n            onClick={handleClickAddPart}\n            startIcon={<AddCircleIcon color=\"secondary\" />}\n          />\n        </Grid>\n        {partList.map((part) => {\n          return (\n            <Grid item xs>\n              <PartItem {...part} />\n            </Grid>\n          );\n        })}\n      </Grid>\n      {loading && (\n        <div className={classes.loader}>\n          <CircularProgress size={30} />\n        </div>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(PartListContainer);\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport PartListContainer from \"../containers/PartList.container\";\n\nconst PartListPage = (props) => {\n  return (\n    <Grid container justify=\"center\">\n      <Grid item xs={12} sm={12} md={12} lg={5}>\n        <PartListContainer />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default React.memo(PartListPage);\n","import React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\n\nimport {\n  FormTextField,\n  FormSelectField,\n  Typography,\n  ActionButton,\n} from \"app/shared/components\";\n\nconst AddEditPartForm = (props) => {\n  return (\n    <Formik\n      initialValues={{\n        name: \"\",\n        code: \"\",\n        status: \"\",\n      }}\n      onSubmit={(aa) => {\n        alert(aa);\n      }}\n      enableReinitialize\n    >\n      {(formikProps) => {\n        const { initialValues, values } = formikProps;\n        return (\n          <Form>\n            <Grid container direction=\"column\" spacing={4}>\n              <Grid item>\n                <Typography variant=\"h6\" weight=\"medium\" color=\"primary\">\n                  Part Name\n                </Typography>\n                <Paper style={{ padding: 20, backgroundColor: \"#b4b6e0\" }}>\n                  <Grid container justify=\"center\">\n                    <Grid item xs={12} sm={12} md={6} lg={6}>\n                      <Field\n                        name=\"name\"\n                        component={FormTextField}\n                        placeholder=\"Enter Part Name\"\n                      />\n                    </Grid>\n                  </Grid>\n                </Paper>\n              </Grid>\n              <Grid item>\n                <Typography variant=\"h6\" weight=\"medium\" color=\"primary\">\n                  Part Code\n                </Typography>\n                <Paper style={{ padding: 20, backgroundColor: \"#b4b6e0\" }}>\n                  <Grid container justify=\"center\">\n                    <Grid item xs={12} sm={12} md={6} lg={6}>\n                      <Field\n                        name=\"code\"\n                        component={FormTextField}\n                        placeholder=\"Enter Part Code\"\n                      />\n                    </Grid>\n                  </Grid>\n                </Paper>\n              </Grid>\n              <Grid item>\n                <Typography variant=\"h6\" weight=\"medium\" color=\"primary\">\n                  Part Status\n                </Typography>\n                <Paper style={{ padding: 20, backgroundColor: \"#b4b6e0\" }}>\n                  <Grid container justify=\"center\">\n                    <Grid item xs={12} sm={12} md={6} lg={6}>\n                      <Field\n                        name=\"status\"\n                        component={FormSelectField}\n                        data={[\n                          {\n                            label: \"Checked In\",\n                            value: \"Checked In\",\n                          },\n                          {\n                            label: \"Checked Out\",\n                            value: \"Checked Out\",\n                          },\n                        ]}\n                      />\n                    </Grid>\n                  </Grid>\n                </Paper>\n              </Grid>\n              <Grid item container spacing={2} justify=\"center\">\n                <Grid item xs={12} lg={3} md={3} sm={12}>\n                  <ActionButton\n                    type=\"submit\"\n                    label=\"Add Part\"\n                    startIcon={<AddCircleIcon />}\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default React.memo(AddEditPartForm);\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { useHistory } from \"react-router-dom\";\n\nimport AddEditPartForm from \"app/modules/part/forms/AddEditPart.form\";\nimport { ActionButton } from \"app/shared/components\";\n\nimport Actions from \"app/modules/part/actions/Part.actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  loader: {\n    display: \"flex\",\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"20vh\",\n  },\n}));\n\nconst AddEditPartContainer = (props) => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  let history = useHistory();\n\n  React.useEffect(() => {\n    dispatch(Actions.getPartList());\n  }, [dispatch]);\n\n  return (\n    <React.Fragment>\n      <AddEditPartForm />\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(AddEditPartContainer);\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport AddEditPartContainer from \"../containers/AddEditpart.container\";\n\nconst NewPartPage = (props) => {\n  return (\n    <Grid container justify=\"center\">\n      <Grid item xs={12} sm={12} md={12} lg={4}>\n        <AddEditPartContainer />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default React.memo(NewPartPage);\n","import React from \"react\";\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nimport AppHeader from \"./header/Header.component\";\n\nimport PartListPage from \"../modules/part/pages/PartList.page\";\nimport NewPartPage from \"../modules/part/pages/NewPart.page\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    maxWidth: \"100vw\",\n    overFlowX: \"hidden\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    width: `calc(100vw -240px)`,\n    minHeight: \"100vh\",\n    backgroundColor: \"#f4f4f4\",\n  },\n  fakeToolbar: {\n    minHeight: 120,\n  },\n}));\n\nconst Layout = (props) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppHeader />\n      <div className={classes.content}>\n        <div className={classes.fakeToolbar} />\n        <Switch>\n          <Route path=\"/app/part-list\" component={PartListPage} />\n          <Route path=\"/app/new-part\" component={NewPartPage} />\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(Layout);\n","import React from \"react\";\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport AppLayout from \"./layout/Layout.container\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Route exact path=\"/\" render={() => <Redirect to=\"/app/part-list\" />} />\n      <Route path=\"/app\" component={AppLayout} />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import tinycolor from \"tinycolor2\";\n\nconst primary = \"#222433\";\nconst secondary = \"#ebebeb\";\nconst warning = \"#FFC260\";\nconst success = \"#3CD4A0\";\nconst info = \"#9013FE\";\n\nconst lightenRate = 7.5;\nconst darkenRate = 15;\n\nexport default {\n  palette: {\n    primary: {\n      main: primary,\n      light: tinycolor(primary).lighten(lightenRate).toHexString(),\n      dark: tinycolor(primary).darken(darkenRate).toHexString(),\n    },\n    secondary: {\n      main: secondary,\n      light: tinycolor(secondary).lighten(lightenRate).toHexString(),\n      dark: tinycolor(secondary).darken(darkenRate).toHexString(),\n      contrastText: \"#FFFFFF\",\n    },\n    warning: {\n      main: warning,\n      light: tinycolor(warning).lighten(lightenRate).toHexString(),\n      dark: tinycolor(warning).darken(darkenRate).toHexString(),\n    },\n    success: {\n      main: success,\n      light: tinycolor(success).lighten(lightenRate).toHexString(),\n      dark: tinycolor(success).darken(darkenRate).toHexString(),\n    },\n    info: {\n      main: info,\n      light: tinycolor(info).lighten(lightenRate).toHexString(),\n      dark: tinycolor(info).darken(darkenRate).toHexString(),\n    },\n    text: {\n      primary: \"#4A4A4A\",\n      secondary: \"#6E6E6E\",\n      hint: \"#B9B9B9\",\n    },\n    background: {\n      default: \"#F6F7FF\",\n      light: \"#F3F5FF\",\n    },\n  },\n  customShadows: {\n    widget:\n      \"0px 3px 11px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\n    widgetDark:\n      \"0px 3px 18px 0px #4558A3B3, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\n    widgetWide:\n      \"0px 12px 33px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\n  },\n  overrides: {\n    MuiBackdrop: {\n      root: {\n        backgroundColor: \"#4A4A4A1A\",\n      },\n    },\n    MuiMenu: {\n      paper: {\n        boxShadow:\n          \"0px 3px 11px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\n      },\n    },\n    MuiSelect: {\n      icon: {\n        color: \"#B9B9B9\",\n      },\n    },\n    MuiListItem: {\n      root: {\n        \"&$selected\": {\n          backgroundColor: \"#F3F5FF !important\",\n          \"&:focus\": {\n            backgroundColor: \"#F3F5FF\",\n          },\n        },\n      },\n      button: {\n        \"&:hover, &:focus\": {\n          backgroundColor: \"#F3F5FF\",\n        },\n      },\n    },\n    MuiTouchRipple: {\n      child: {\n        backgroundColor: \"white\",\n      },\n    },\n    MuiTableRow: {\n      root: {\n        height: 56,\n      },\n    },\n    MuiTableCell: {\n      root: {\n        borderBottom: \"1px solid rgba(224, 224, 224, .5)\",\n      },\n      head: {\n        fontSize: \"0.95rem\",\n      },\n      body: {\n        fontSize: \"0.95rem\",\n      },\n    },\n  },\n};\n","import defaultTheme from \"./default\";\n\nimport { createMuiTheme } from \"@material-ui/core\";\n\nconst overrides = {\n  typography: {\n    h1: {\n      fontSize: \"3rem\",\n    },\n    h2: {\n      fontSize: \"2rem\",\n    },\n    h3: {\n      fontSize: \"1.64rem\",\n    },\n    h4: {\n      fontSize: \"1.5rem\",\n    },\n    h5: {\n      fontSize: \"1.285rem\",\n    },\n    h6: {\n      fontSize: \"1.142rem\",\n    },\n  },\n};\n\nexport default {\n  default: createMuiTheme({ ...defaultTheme, ...overrides }),\n};\n","// @flow\n\nimport { createReducer } from \"reduxsauce\";\n\nimport {\n  GET_PART_LIST,\n  GET_PART_LIST_SUCCESS,\n  GET_PART_LIST_FAILURE,\n} from \"../actions/Types\";\n\nexport const INITIAL_STATE = {\n  partList: [],\n  partListLoading: false,\n  partListError: null,\n};\n\nexport const getPartList = (\n  state: Object = INITIAL_STATE,\n  { payload }: any\n) => ({\n  ...state,\n  partListLoading: true,\n  partListError: null,\n});\n\nexport const getPartListSuccess = (\n  state: Object = INITIAL_STATE,\n  { payload }: any\n) => ({\n  ...state,\n  partList: payload.data,\n  partListLoading: false,\n  partListError: null,\n});\n\nexport const getPartListFailure = (\n  state: Object = INITIAL_STATE,\n  { payload }: any\n) => ({\n  ...state,\n  partListError: payload.error,\n  partListLoading: false,\n});\n\nconst ACTION_HANDLERS = {\n  [GET_PART_LIST]: getPartList,\n  [GET_PART_LIST_SUCCESS]: getPartListSuccess,\n  [GET_PART_LIST_FAILURE]: getPartListFailure,\n};\n\nexport default createReducer(INITIAL_STATE, ACTION_HANDLERS);\n","// @flow\n\nimport { combineReducers } from \"redux\";\n\nimport PartReducer from \"../modules/part/reducers/Part.reducer\";\n\nexport default combineReducers({\n  partState: PartReducer,\n});\n","export const PartList = [\n  {\n    id: 1,\n    name: \"Asus Laptop\",\n    code: \"PR001\",\n    status: \"Checked In\",\n  },\n  {\n    id: 2,\n    name: \"Dell Monitor\",\n    code: \"PR002\",\n    status: \"Checked Out\",\n  },\n];\n","import { PartList } from \"./stub/PartList.data\";\n\nconst partApiService = {\n  getPartList: async () => {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        return resolve(PartList);\n      }, 1000);\n    });\n  },\n};\n\nexport default partApiService;\n","// @flow\n\nimport { takeLatest, call, put } from \"redux-saga/effects\";\nimport type { Saga } from \"redux-saga\";\n\nimport Actions from \"../actions/Part.actions\";\nimport PartApiService from \"../../../api/Part.service\";\n\nimport { GET_PART_LIST } from \"../actions/Types\";\n\nexport default () => {\n  function* getPartList({ payload }) {\n    try {\n      const response = yield call(PartApiService.getPartList);\n      yield put(Actions.getPartListSuccess(response));\n    } catch (error) {\n      yield put(Actions.getPartListFailure(error));\n    }\n  }\n\n  function* watchGetPartList(): Saga<void> {\n    yield takeLatest(GET_PART_LIST, getPartList);\n  }\n\n  return {\n    watchGetPartList,\n  };\n};\n","// @flow\n\nimport { all, fork } from \"redux-saga/effects\";\nimport type { Saga } from \"redux-saga\";\n\nimport PartSaga from \"../modules/part/sagas/Part.saga\";\n\nexport default function* root(): Saga<void> {\n  const createdPartSaga = PartSaga();\n\n  yield all([fork(createdPartSaga.watchGetPartList)]);\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { CssBaseline } from \"@material-ui/core\";\n\nimport App from \"app/App\";\nimport Themes from \"themes/index\";\n\nimport configureStore from \"./app/store/ConfigureStore\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nlet reactotroneStoreActions = null;\n\nif (process.env.NODE_ENV && process.env.NODE_ENV === \"development\") {\n  reactotroneStoreActions = require(\"./config/Reactotrone.config\").default;\n}\n\nconst store = configureStore(reactotroneStoreActions);\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={Themes.default}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// @flow\nimport { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport reducers from \"./Reducers\";\nimport sagas from \"./Sagas\";\n\nexport default function configureStore(\n  reactotroneStoreActions: any,\n  INITIAL_STATE: any = {}\n) {\n  const middleware = [];\n  const sagaMiddleware = createSagaMiddleware();\n\n  middleware.push(sagaMiddleware);\n\n  const store = (reactotroneStoreActions || createStore)(\n    reducers,\n    INITIAL_STATE,\n    applyMiddleware(...middleware)\n  );\n  sagaMiddleware.run(sagas);\n\n  return store;\n}\n"],"sourceRoot":""}