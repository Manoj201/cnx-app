{"version":3,"sources":["app/shared/components/typography/Typography.js","app/shared/components/actionButton/ActionButton.component.js","app/layout/header/Header.component.js","app/modules/part/components/PartItem/PartItem.component.js","app/modules/part/containers/PartList.Container.js","app/modules/part/pages/PartList.page.js","app/modules/part/pages/NewPart.page.js","app/layout/Layout.container.js","app/App.js","themes/default.js","themes/index.js","app/modules/part/reducers/Part.reducer.js","app/modules/part/actions/Types.js","app/store/Reducers.js","app/modules/part/actions/Part.actions.js","app/modules/part/sagas/Part.saga.js","app/store/Sagas.js","serviceWorker.js","index.js","app/store/ConfigureStore.js","images/logo.png"],"names":["getColor","color","theme","brigtness","palette","getFontWeight","style","getFontSize","size","multiplier","variant","defaultSize","typography","fontSize","React","memo","children","weight","colorBrightness","props","useTheme","fontWeight","Button","useStyles","makeStyles","appBar","width","backgroundImage","padding","appTitle","paddingLeft","paddingTop","classes","className","root","AppBar","position","Toolbar","Grid","container","justify","alignItems","direction","item","src","logo","alt","height","paper","backgroundColor","Paper","elevation","Fragment","spacing","xs","sm","md","lg","display","maxWidth","overFlowX","content","flexGrow","minHeight","fakeToolbar","withRouter","path","component","PartListPage","NewPartPage","App","exact","render","to","AppLayout","primary","main","light","tinycolor","lighten","toHexString","dark","darken","secondary","contrastText","warning","success","info","text","hint","background","default","customShadows","widget","widgetDark","widgetWide","overrides","MuiBackdrop","MuiMenu","boxShadow","MuiSelect","icon","MuiListItem","button","MuiTouchRipple","child","MuiTableRow","MuiTableCell","borderBottom","head","body","createMuiTheme","defaultTheme","h1","h2","h3","h4","h5","h6","INITIAL_STATE","partList","partListLoading","partListError","ACTION_HANDLERS","state","payload","data","error","createReducer","combineReducers","partState","PartReducer","type","getPartList","watchGetPartList","put","Actions","name","takeLatest","createdPartSaga","PartSaga","all","fork","Boolean","window","location","hostname","match","store","reactotroneStoreActions","middleware","sagaMiddleware","createSagaMiddleware","push","createStore","reducers","applyMiddleware","run","sagas","configureStore","ReactDOM","ThemeProvider","Themes","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message","module","exports"],"mappings":"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","file":"static/js/main.924a31d0.chunk.js","sourcesContent":["import React from \"react\";\nimport { withStyles, Typography as TypographyBase } from \"@material-ui/core\";\nimport { useTheme, makeStyles } from \"@material-ui/styles\";\n\nconst Typography = ({\n  children,\n  weight,\n  size,\n  colorBrightness,\n  color,\n  ...props\n}) => {\n  var theme = useTheme();\n\n  return (\n    <TypographyBase\n      style={{\n        color: getColor(color, theme, colorBrightness),\n        fontWeight: getFontWeight(weight),\n        fontSize: getFontSize(size, props.variant, theme),\n      }}\n      {...props}\n    >\n      {children}\n    </TypographyBase>\n  );\n};\n\nfunction getColor(color, theme, brigtness = \"main\") {\n  if (color && theme.palette[color] && theme.palette[color][brigtness]) {\n    return theme.palette[color][brigtness];\n  }\n}\n\nfunction getFontWeight(style) {\n  switch (style) {\n    case \"light\":\n      return 300;\n    case \"medium\":\n      return 500;\n    case \"bold\":\n      return 600;\n    default:\n      return 400;\n  }\n}\n\nfunction getFontSize(size, variant = \"\", theme) {\n  var multiplier;\n\n  switch (size) {\n    case \"sm\":\n      multiplier = 0.8;\n      break;\n    case \"md\":\n      multiplier = 1.5;\n      break;\n    case \"xl\":\n      multiplier = 2;\n      break;\n    case \"xxl\":\n      multiplier = 3;\n      break;\n    default:\n      multiplier = 1;\n      break;\n  }\n\n  var defaultSize =\n    variant && theme.typography[variant]\n      ? theme.typography[variant].fontSize\n      : theme.typography.fontSize + \"px\";\n\n  return `calc(${defaultSize} * ${multiplier})`;\n}\n\nexport default React.memo(Typography);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Button from \"@material-ui/core/Button\";\n\nconst ActionButton = (props) => {\n  return (\n    <div>\n      <Button variant=\"contained\" color=\"primary\" size=\"small\">\n        Action Button\n      </Button>\n    </div>\n  );\n};\n\nexport default React.memo(ActionButton);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport { Typography } from \"../../shared/components\";\n\nimport logo from \"../../../images/logo.png\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    width: \"100%\",\n    backgroundImage:\n      \"linear-gradient(0deg, rgba(46,51,83,1) 24%, rgba(0,0,0,1) 86%)\",\n    padding: 20,\n  },\n  appTitle: {\n    paddingLeft: 20,\n    paddingTop: 5,\n  },\n}));\n\nconst AppHeader = (props) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <Grid\n            container\n            justify=\"flex-start\"\n            alignItems=\"center\"\n            direction=\"row\"\n          >\n            <Grid item>\n              <img src={logo} alt=\"logo\" height=\"75\" weight=\"150\" />\n            </Grid>\n            <Grid item className={classes.appTitle}>\n              <Typography variant=\"h4\" color=\"secondary\" weight=\"bold\">\n                CNX APP\n              </Typography>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default React.memo(AppHeader);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport { Typography } from \"../../../../shared/components\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    backgroundColor: \"#b4b6e0\",\n    padding: 20,\n  },\n}));\n\nconst PartItem = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Paper elevation={0} className={classes.paper}>\n      <Grid container justify=\"space-between\" alignItems=\"center\">\n        <Grid item>\n          <Typography variant=\"h6\" color=\"primary\" weight=\"medium\">\n            Dell Monitor\n          </Typography>\n          <Typography variant=\"body2\" color=\"primary\" weight=\"medium\">\n            PR001\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"body1\" color=\"primary\" weight=\"medium\">\n            Checked-in\n          </Typography>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default React.memo(PartItem);\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport PartItem from \"../components/PartItem/PartItem.component\";\n\nimport { ActionButton } from \"../../../shared/components\";\n\nconst PartListContainer = (props) => {\n  return (\n    <React.Fragment>\n      <Grid container spacing={2} direction=\"column\">\n        <ActionButton />\n        <Grid item xs>\n          <PartItem />\n        </Grid>\n        <Grid item xs>\n          <PartItem />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(PartListContainer);\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport PartListContainer from \"../containers/PartList.Container\";\n\nconst PartListPage = (props) => {\n  return (\n    <Grid container justify=\"center\">\n      <Grid item xs={12} sm={12} md={12} lg={5}>\n        <PartListContainer />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default React.memo(PartListPage);\n","import React from \"react\";\n\nconst NewPartPage = (props) => {\n  return <div>New Part Page</div>;\n};\n\nexport default React.memo(NewPartPage);\n","import React from \"react\";\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nimport AppHeader from \"./header/Header.component\";\n\nimport PartListPage from \"../modules/part/pages/PartList.page\";\nimport NewPartPage from \"../modules/part/pages/NewPart.page\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    maxWidth: \"100vw\",\n    overFlowX: \"hidden\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    width: `calc(100vw -240px)`,\n    minHeight: \"100vh\",\n    backgroundColor: \"#f4f4f4\",\n  },\n  fakeToolbar: {\n    minHeight: 120,\n  },\n}));\n\nconst Layout = (props) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppHeader />\n      <div className={classes.content}>\n        <div className={classes.fakeToolbar} />\n        <Switch>\n          <Route path=\"/app/part-list\" component={PartListPage} />\n          <Route path=\"/app/new-part\" component={NewPartPage} />\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(Layout);\n","import React from \"react\";\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport AppLayout from \"./layout/Layout.container\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Route exact path=\"/\" render={() => <Redirect to=\"/app/part-list\" />} />\n      <Route path=\"/app\" component={AppLayout} />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import tinycolor from \"tinycolor2\";\n\nconst primary = \"#222433\";\nconst secondary = \"#ebebeb\";\nconst warning = \"#FFC260\";\nconst success = \"#3CD4A0\";\nconst info = \"#9013FE\";\n\nconst lightenRate = 7.5;\nconst darkenRate = 15;\n\nexport default {\n  palette: {\n    primary: {\n      main: primary,\n      light: tinycolor(primary).lighten(lightenRate).toHexString(),\n      dark: tinycolor(primary).darken(darkenRate).toHexString(),\n    },\n    secondary: {\n      main: secondary,\n      light: tinycolor(secondary).lighten(lightenRate).toHexString(),\n      dark: tinycolor(secondary).darken(darkenRate).toHexString(),\n      contrastText: \"#FFFFFF\",\n    },\n    warning: {\n      main: warning,\n      light: tinycolor(warning).lighten(lightenRate).toHexString(),\n      dark: tinycolor(warning).darken(darkenRate).toHexString(),\n    },\n    success: {\n      main: success,\n      light: tinycolor(success).lighten(lightenRate).toHexString(),\n      dark: tinycolor(success).darken(darkenRate).toHexString(),\n    },\n    info: {\n      main: info,\n      light: tinycolor(info).lighten(lightenRate).toHexString(),\n      dark: tinycolor(info).darken(darkenRate).toHexString(),\n    },\n    text: {\n      primary: \"#4A4A4A\",\n      secondary: \"#6E6E6E\",\n      hint: \"#B9B9B9\",\n    },\n    background: {\n      default: \"#F6F7FF\",\n      light: \"#F3F5FF\",\n    },\n  },\n  customShadows: {\n    widget:\n      \"0px 3px 11px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\n    widgetDark:\n      \"0px 3px 18px 0px #4558A3B3, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\n    widgetWide:\n      \"0px 12px 33px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\n  },\n  overrides: {\n    MuiBackdrop: {\n      root: {\n        backgroundColor: \"#4A4A4A1A\",\n      },\n    },\n    MuiMenu: {\n      paper: {\n        boxShadow:\n          \"0px 3px 11px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\n      },\n    },\n    MuiSelect: {\n      icon: {\n        color: \"#B9B9B9\",\n      },\n    },\n    MuiListItem: {\n      root: {\n        \"&$selected\": {\n          backgroundColor: \"#F3F5FF !important\",\n          \"&:focus\": {\n            backgroundColor: \"#F3F5FF\",\n          },\n        },\n      },\n      button: {\n        \"&:hover, &:focus\": {\n          backgroundColor: \"#F3F5FF\",\n        },\n      },\n    },\n    MuiTouchRipple: {\n      child: {\n        backgroundColor: \"white\",\n      },\n    },\n    MuiTableRow: {\n      root: {\n        height: 56,\n      },\n    },\n    MuiTableCell: {\n      root: {\n        borderBottom: \"1px solid rgba(224, 224, 224, .5)\",\n      },\n      head: {\n        fontSize: \"0.95rem\",\n      },\n      body: {\n        fontSize: \"0.95rem\",\n      },\n    },\n  },\n};\n","import defaultTheme from \"./default\";\n\nimport { createMuiTheme } from \"@material-ui/core\";\n\nconst overrides = {\n  typography: {\n    h1: {\n      fontSize: \"3rem\",\n    },\n    h2: {\n      fontSize: \"2rem\",\n    },\n    h3: {\n      fontSize: \"1.64rem\",\n    },\n    h4: {\n      fontSize: \"1.5rem\",\n    },\n    h5: {\n      fontSize: \"1.285rem\",\n    },\n    h6: {\n      fontSize: \"1.142rem\",\n    },\n  },\n};\n\nexport default {\n  default: createMuiTheme({ ...defaultTheme, ...overrides }),\n};\n","// @flow\n\nimport { createReducer } from \"reduxsauce\";\n\nimport {\n  GET_PART_LIST,\n  GET_PART_LIST_SUCCESS,\n  GET_PART_LIST_FAILURE,\n} from \"../actions/Types\";\n\nexport const INITIAL_STATE = {\n  partList: [],\n  partListLoading: false,\n  partListError: null,\n};\n\nexport const getPartList = (\n  state: Object = INITIAL_STATE,\n  { payload }: any\n) => ({\n  ...state,\n  partListLoading: true,\n  partListError: null,\n});\n\nexport const getPartListSuccess = (\n  state: Object = INITIAL_STATE,\n  { payload }: any\n) => ({\n  ...state,\n  partList: payload.data,\n  partListLoading: false,\n  partListError: null,\n});\n\nexport const getPartListFailure = (\n  state: Object = INITIAL_STATE,\n  { payload }: any\n) => ({\n  ...state,\n  partListError: payload.error,\n  partListLoading: false,\n});\n\nconst ACTION_HANDLERS = {\n  [GET_PART_LIST]: getPartList,\n  [GET_PART_LIST_SUCCESS]: getPartListSuccess,\n  [GET_PART_LIST_FAILURE]: getPartListFailure,\n};\n\nexport default createReducer(INITIAL_STATE, ACTION_HANDLERS);\n","// @flow\nexport const GET_PART_LIST = \"GET_PART_LIST\";\nexport const GET_PART_LIST_SUCCESS = \"GET_PART_LIST_SUCCESS\";\nexport const GET_PART_LIST_FAILURE = \"GET_PART_LIST_FAILURE\";\n","// @flow\n\nimport { combineReducers } from \"redux\";\n\nimport PartReducer from \"../modules/part/reducers/Part.reducer\";\n\nexport default combineReducers({\n  partState: PartReducer,\n});\n","// @flow\n\nimport {\n  GET_PART_LIST,\n  GET_PART_LIST_SUCCESS,\n  GET_PART_LIST_FAILURE,\n} from \"./Types\";\n\nconst getPartList = (): Object => ({\n  type: GET_PART_LIST,\n  payload: {},\n});\n\nconst getPartListSuccess = (data: Object): Object => ({\n  type: GET_PART_LIST_SUCCESS,\n  payload: { data },\n});\n\nconst getPartListFailure = (error: Object): Object => ({\n  type: GET_PART_LIST_FAILURE,\n  payload: { error },\n});\n\nexport default {\n  getPartList,\n  getPartListSuccess,\n  getPartListFailure,\n};\n","// @flow\n\nimport { takeLatest, call, put } from \"redux-saga/effects\";\nimport type { Saga } from \"redux-saga\";\n\nimport Actions from \"../actions/Part.actions\";\n\nimport { GET_PART_LIST } from \"../actions/Types\";\n\nexport default () => {\n  function* getPartList({ payload }) {\n    try {\n      yield put(\n        Actions.getPartListSuccess({\n          name: \"Manoj\",\n        })\n      );\n    } catch (error) {\n      yield put(Actions.getPartListFailure(error));\n    }\n  }\n\n  function* watchGetPartList(): Saga<void> {\n    yield takeLatest(GET_PART_LIST, getPartList);\n  }\n\n  return {\n    watchGetPartList,\n  };\n};\n","// @flow\n\nimport { all, fork } from \"redux-saga/effects\";\nimport type { Saga } from \"redux-saga\";\n\nimport PartSaga from \"../modules/part/sagas/Part.saga\";\n\nexport default function* root(): Saga<void> {\n  const createdPartSaga = PartSaga();\n\n  yield all([fork(createdPartSaga.watchGetPartList)]);\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { CssBaseline } from \"@material-ui/core\";\n\nimport App from \"app/App\";\nimport Themes from \"themes/index\";\n\nimport configureStore from \"./app/store/ConfigureStore\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nlet reactotroneStoreActions = null;\n\nif (process.env.NODE_ENV && process.env.NODE_ENV === \"development\") {\n  reactotroneStoreActions = require(\"./config/Reactotrone.config\").default;\n}\n\nconst store = configureStore(reactotroneStoreActions);\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={Themes.default}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// @flow\nimport { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport reducers from \"./Reducers\";\nimport sagas from \"./Sagas\";\n\nexport default function configureStore(\n  reactotroneStoreActions: any,\n  INITIAL_STATE: any = {}\n) {\n  const middleware = [];\n  const sagaMiddleware = createSagaMiddleware();\n\n  middleware.push(sagaMiddleware);\n\n  const store = (reactotroneStoreActions || createStore)(\n    reducers,\n    INITIAL_STATE,\n    applyMiddleware(...middleware)\n  );\n  sagaMiddleware.run(sagas);\n\n  return store;\n}\n","module.exports = __webpack_public_path__ + \"static/media/logo.99e0859d.png\";"],"sourceRoot":""}